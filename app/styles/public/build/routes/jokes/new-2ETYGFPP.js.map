{
  "version": 3,
  "sources": ["browser-route-module:/Volumes/Development/sites/remix-jokes/app/routes/jokes/new.tsx?browser", "../../../../app/routes/jokes/new.tsx"],
  "sourcesContent": ["export { CatchBoundary, ErrorBoundary, default } from \"/Volumes/Development/sites/remix-jokes/app/routes/jokes/new.tsx\";", "import type { ActionFunction, LoaderFunction } from 'remix';\nimport { useActionData, redirect, useCatch, Link, Form } from 'remix';\nimport { db } from '~/utils/db.server';\nimport { requireUserId, getUserId } from '~/utils/session.server';\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await getUserId(request);\n  if (!userId) {\n    throw new Response('Unauthorised', { status: 401 });\n  }\n  return {};\n};\n\nfunction validateJokeContent(content: string) {\n  if (content.length < 10) {\n    return `That joke is too short`;\n  }\n}\n\nfunction validateJokeName(name: string) {\n  if (name.length < 2) {\n    return `That joke's name is too short`;\n  }\n}\n\ntype ActionData = {\n  formError?: string;\n  fieldErrors?: {\n    name: string | undefined;\n    content: string | undefined;\n  };\n  fields?: {\n    name: string;\n    content: string;\n  };\n};\n\nexport const action: ActionFunction = async ({\n  request,\n}): Promise<Response | ActionData> => {\n  let userId = await requireUserId(request);\n  let form = await request.formData();\n  let name = form.get('name');\n  let content = form.get('content');\n\n  // we do this type check to be extra sure and to make TypeScript happy\n  if (typeof name !== 'string' || typeof content !== 'string') {\n    return { formError: `Form not submitted correctly.` };\n  }\n\n  let fieldErrors = {\n    name: validateJokeName(name),\n    content: validateJokeContent(content),\n  };\n\n  let fields = { name, content };\n  if (Object.values(fieldErrors).some(Boolean)) {\n    return { fieldErrors, fields };\n  }\n\n  let joke = await db.joke.create({\n    data: { ...fields, jokesterId: userId },\n  });\n  return redirect(`/jokes/${joke.id}`);\n};\n\nexport default function NewJokeRoute() {\n  let actionData = useActionData<ActionData | undefined>();\n\n  return (\n    <div>\n      <p>Add your own hilarious joke</p>\n      <Form method=\"post\">\n        <div>\n          <label>\n            Name:\n            <input\n              type=\"text\"\n              defaultValue={actionData?.fields?.name}\n              name=\"name\"\n              aria-invalid={Boolean(actionData?.fieldErrors?.name) || undefined}\n              aria-describedby={\n                actionData?.fieldErrors?.name ? 'name-error' : undefined\n              }\n            />\n          </label>\n          {actionData?.fieldErrors?.name ? (\n            <p className=\"form-validation-error\" role=\"alert\" id=\"name-error\">\n              {actionData.fieldErrors.name}\n            </p>\n          ) : null}\n        </div>\n        <div>\n          <label>\n            Content:\n            <textarea\n              defaultValue={actionData?.fields?.content}\n              name=\"content\"\n              aria-invalid={\n                Boolean(actionData?.fieldErrors?.content) || undefined\n              }\n              aria-describedby={\n                actionData?.fieldErrors?.content ? 'content-error' : undefined\n              }\n            />\n          </label>\n          {actionData?.fieldErrors?.content ? (\n            <p\n              className=\"form-validation-error\"\n              role=\"alert\"\n              id=\"content-error\"\n            >\n              {actionData.fieldErrors.content}\n            </p>\n          ) : null}\n        </div>\n        <div>\n          <button type=\"submit\" className=\"button\">\n            Add\n          </button>\n        </div>\n      </Form>\n    </div>\n  );\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  if (caught.status === 401) {\n    return (\n      <div className=\"error-container\">\n        <p>You must be logged in to create a joke</p>\n        <Link to=\"/login\">Login</Link>\n      </div>\n    );\n  }\n}\n\nexport function ErrorBoundary() {\n  return (\n    <div className=\"error-container\">\n      {`Something unexpected went wrong. Sorry about that.`}\n    </div>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAAA;;;ACAA;AAEA,gBAAmB;AACnB,qBAAyC;AA+D1B,wBAAwB;AAlEvC;AAmEE,MAAI,aAAa;AAEjB,SACE,oCAAC,OAAD,MACE,oCAAC,KAAD,MAAG,gCACH,oCAAC,MAAD;AAAA,IAAM,QAAO;AAAA,KACX,oCAAC,OAAD,MACE,oCAAC,SAAD,MAAO,SAEL,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,cAAc,+CAAY,WAAZ,mBAAoB;AAAA,IAClC,MAAK;AAAA,IACL,gBAAc,QAAQ,+CAAY,gBAAZ,mBAAyB,SAAS;AAAA,IACxD,oBACE,gDAAY,gBAAZ,mBAAyB,QAAO,eAAe;AAAA,OAIpD,gDAAY,gBAAZ,mBAAyB,QACxB,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,IAAwB,MAAK;AAAA,IAAQ,IAAG;AAAA,KAClD,WAAW,YAAY,QAExB,OAEN,oCAAC,OAAD,MACE,oCAAC,SAAD,MAAO,YAEL,oCAAC,YAAD;AAAA,IACE,cAAc,+CAAY,WAAZ,mBAAoB;AAAA,IAClC,MAAK;AAAA,IACL,gBACE,QAAQ,+CAAY,gBAAZ,mBAAyB,YAAY;AAAA,IAE/C,oBACE,gDAAY,gBAAZ,mBAAyB,WAAU,kBAAkB;AAAA,OAI1D,gDAAY,gBAAZ,mBAAyB,WACxB,oCAAC,KAAD;AAAA,IACE,WAAU;AAAA,IACV,MAAK;AAAA,IACL,IAAG;AAAA,KAEF,WAAW,YAAY,WAExB,OAEN,oCAAC,OAAD,MACE,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,IAAS,WAAU;AAAA,KAAS;AAAA;AAS5C,yBAAyB;AAC9B,QAAM,SAAS;AAEf,MAAI,OAAO,WAAW,KAAK;AACzB,WACE,oCAAC,OAAD;AAAA,MAAK,WAAU;AAAA,OACb,oCAAC,KAAD,MAAG,2CACH,oCAAC,MAAD;AAAA,MAAM,IAAG;AAAA,OAAS;AAAA;AAAA;AAMnB,yBAAyB;AAC9B,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ;AAAA;",
  "names": []
}
