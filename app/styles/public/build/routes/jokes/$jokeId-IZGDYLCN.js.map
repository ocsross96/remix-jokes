{
  "version": 3,
  "sources": ["browser-route-module:/Volumes/Development/sites/remix-jokes/app/routes/jokes/$jokeId.tsx?browser", "../../../../app/routes/jokes/$jokeId.tsx"],
  "sourcesContent": ["export { CatchBoundary, ErrorBoundary, default } from \"/Volumes/Development/sites/remix-jokes/app/routes/jokes/$jokeId.tsx\";", "import type { ActionFunction, LoaderFunction } from 'remix';\nimport { Link, useLoaderData, useParams, useCatch, redirect } from 'remix';\nimport type { Joke } from '@prisma/client';\nimport { db } from '~/utils/db.server';\nimport { getUserId, requireUserId } from '~/utils/session.server';\n\ntype LoaderData = { joke: Joke, isOwner: boolean };\n\nexport let loader: LoaderFunction = async ({ params }) => {\n  const userId = await getUserId(request);\n  const joke = await db.joke.findUnique({\n    where: { id: params.jokeId },\n  });\n  console.log({ joke });\n  if (!joke)\n    throw new Response('What a joke! Not found.', {\n      status: 404,\n    });\n  const data: LoaderData = {\n    joke,\n    isOwner: userId === joke.jokesterId\n  };\n  return data;\n};\n\nexport const action: ActionFunction = async ({ request, params }): Promise<Response | ActionData> => {\n  const form = await request.formData();\n  if (form.get('_method') === 'delete') {\n    const userId = await requireUserId(request);\n    const joke = await db.joke.findUnique({\n      where: { id: params.jokeId }\n    });\n    if (!joke) {\n      throw new Response(\n        \"Can't delete what does not exist\",\n        { status: 404 }\n      );\n    }\n    if (joke.jokesterId !== userId) {\n      throw new Response(\n        \"Pssh, nice try. That's not your joke\",\n        {\n          status: 401\n        }\n      )\n    }\n    await db.joke.delete({ where: { id: params.jokeId } });\n    return redirect(\"/jokes\");\n  }\n};\n\nexport default function JokeRoute() {\n  let data = useLoaderData<LoaderData>();\n\n  return (\n    <div>\n      <p>Here's your hilarious joke:</p>\n      <p>{data.joke.content}</p>\n      <Link to=\".\">{data.joke.name} Permalink</Link>\n      {data.isOwner ? (\n        <form method=\"post\">\n          <input type=\"hidden\" name=\"_method\" value=\"delete\" />\n          <button type=\"submit\" className=\"button\">Delete</button>\n        </form>\n      ) : null}\n    </div>\n  );\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n  const params = useParams();\n  switch (caught.status) {\n    case 404:\n      return (\n        <div className=\"error-container\">\n          Huh? What the heck is \"{params.jokeId}\"\n        </div>\n      );\n    case 401: {\n      return (\n        <div className=\"error-container\">\n          Sorry, but {params.jokeId} is not your joke.\n        </div>\n      )\n    }\n    default:{\n      throw new Error(`Unhandled error: ${caught.status}`);\n    }\n  }\n}\n\nexport function ErrorBoundary() {\n  const { jokeId } = useParams();\n  return (\n    <div className=\"error-container\">\n      {`There was an error loading joke by the id ${jokeId}. Sorry.`}\n    </div>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;;;ACAA;AAGA,gBAAmB;AACnB,qBAAyC;AA+C1B,qBAAqB;AAClC,MAAI,OAAO;AAEX,SACE,oCAAC,OAAD,MACE,oCAAC,KAAD,MAAG,gCACH,oCAAC,KAAD,MAAI,KAAK,KAAK,UACd,oCAAC,MAAD;AAAA,IAAM,IAAG;AAAA,KAAK,KAAK,KAAK,MAAK,eAC5B,KAAK,UACJ,oCAAC,QAAD;AAAA,IAAM,QAAO;AAAA,KACX,oCAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAS,MAAK;AAAA,IAAU,OAAM;AAAA,MAC1C,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,IAAS,WAAU;AAAA,KAAS,aAEzC;AAAA;AAKH,yBAAyB;AAC9B,QAAM,SAAS;AACf,QAAM,SAAS;AACf,UAAQ,OAAO;AAAA,SACR;AACH,aACE,oCAAC,OAAD;AAAA,QAAK,WAAU;AAAA,SAAkB,2BACP,OAAO,QAAO;AAAA,SAGvC,KAAK;AACR,aACE,oCAAC,OAAD;AAAA,QAAK,WAAU;AAAA,SAAkB,eACnB,OAAO,QAAO;AAAA;AAAA,aAIxB;AACN,YAAM,IAAI,MAAM,oBAAoB,OAAO;AAAA;AAAA;AAAA;AAK1C,yBAAyB;AAC9B,QAAM,EAAE,WAAW;AACnB,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,6CAA6C;AAAA;",
  "names": []
}
