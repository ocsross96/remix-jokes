{
  "version": 3,
  "sources": ["browser-route-module:/Volumes/Development/sites/remix-jokes/app/routes/jokes/index.tsx?browser", "../../../../app/routes/jokes/index.tsx"],
  "sourcesContent": ["export { CatchBoundary, ErrorBoundary, default } from \"/Volumes/Development/sites/remix-jokes/app/routes/jokes/index.tsx\";", "import type { LoaderFunction } from 'remix';\nimport { Link, useLoaderData, useCatch } from 'remix';\nimport type { Joke } from '@prisma/client';\nimport { db } from '~/utils/db.server';\n\ntype LoaderData = { randomJoke: Joke };\n\nexport let loader: LoaderFunction = async ({ params }) => {\n  const count = await db.joke.count();\n  const randomRowNumber = Math.floor(Math.random() * count);\n  const [randomJoke] = await db.joke.findMany({\n    take: 1,\n    skip: randomRowNumber,\n  });\n\n  if (!randomJoke) {\n    throw new Response('No random joke not found', {\n      status: 404,\n    });\n  }\n  const data: LoaderData = { randomJoke };\n  return data;\n};\n\nexport default function JokesIndexRoute() {\n  let data = useLoaderData<LoaderData>();\n\n  return (\n    <div>\n      <p>Here's a random joke:</p>\n      <p>{data.randomJoke.content}</p>\n      <Link to=\".\">{data.randomJoke.name} Permalink</Link>\n    </div>\n  );\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  if (caught.status === 404) {\n    return (\n      <div className=\"error-container\">There are no jokes to display.</div>\n    );\n  }\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error();\n  return <div className=\"error-container\">I did a whoopsies.</div>;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;AAAA;;;ACAA;AAGA,gBAAmB;AAqBJ,2BAA2B;AACxC,MAAI,OAAO;AAEX,SACE,oCAAC,OAAD,MACE,oCAAC,KAAD,MAAG,0BACH,oCAAC,KAAD,MAAI,KAAK,WAAW,UACpB,oCAAC,MAAD;AAAA,IAAM,IAAG;AAAA,KAAK,KAAK,WAAW,MAAK;AAAA;AAKlC,yBAAyB;AAC9B,QAAM,SAAS;AAEf,MAAI,OAAO,WAAW,KAAK;AACzB,WACE,oCAAC,OAAD;AAAA,MAAK,WAAU;AAAA,OAAkB;AAAA;AAGrC,QAAM,IAAI,MAAM,2CAA2C,OAAO;AAAA;AAG7D,uBAAuB,EAAE,SAA2B;AACzD,UAAQ;AACR,SAAO,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAAkB;AAAA;",
  "names": []
}
