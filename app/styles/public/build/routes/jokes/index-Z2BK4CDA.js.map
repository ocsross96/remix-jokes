{
  "version": 3,
  "sources": ["browser-route-module:/Volumes/Development/sites/remix-jokes/app/routes/jokes/index.tsx?browser", "../../../../app/routes/jokes/index.tsx"],
  "sourcesContent": ["export { ErrorBoundary, default } from \"/Volumes/Development/sites/remix-jokes/app/routes/jokes/index.tsx\";", "import type { LoaderFunction } from 'remix';\nimport { Link, useLoaderData, useCatch } from 'remix';\nimport type { Joke } from '@prisma/client';\nimport { db } from '~/utils/db.server';\n\ntype LoaderData = { randomJoke: Joke };\n\nexport let loader: LoaderFunction = async ({ params }) => {\n  let count = await db.joke.count();\n  let randomRowNumber = Math.floor(Math.random() * count);\n  let [randomJoke] = await db.joke.findMany({\n    take: 1,\n    skip: randomRowNumber,\n  });\n\n  if (!randomJoke) {\n    throw new Response('No random joke not found', {\n      status: 404,\n    });\n  }\n  const data: LoaderData = { randomJoke };\n  return data;\n};\nexport default function JokesIndexRoute() {\n  let data = useLoaderData<LoaderData>();\n\n  return (\n    <div>\n      <p>Here's a random joke:</p>\n      <p>{data.randomJoke.content}</p>\n      <Link to=\".\">{data.randomJoke.name} Permalink</Link>\n    </div>\n  );\n}\n\nexport function ErrorBoundary() {\n  return <div className=\"error-container\">I did a whoopsies.</div>;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;;;ACAA;AAGA,gBAAmB;AAoBJ,2BAA2B;AACxC,MAAI,OAAO;AAEX,SACE,oCAAC,OAAD,MACE,oCAAC,KAAD,MAAG,0BACH,oCAAC,KAAD,MAAI,KAAK,WAAW,UACpB,oCAAC,MAAD;AAAA,IAAM,IAAG;AAAA,KAAK,KAAK,WAAW,MAAK;AAAA;AAKlC,yBAAyB;AAC9B,SAAO,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAAkB;AAAA;",
  "names": []
}
