{
  "version": 3,
  "sources": ["browser-route-module:/Volumes/Development/sites/remix-jokes/app/routes/jokes/$jokeId.tsx?browser", "../../../../app/routes/jokes/$jokeId.tsx"],
  "sourcesContent": ["export { CatchBoundary, ErrorBoundary, default, meta } from \"/Volumes/Development/sites/remix-jokes/app/routes/jokes/$jokeId.tsx\";", "import { ActionFunction, LoaderFunction, MetaFunction } from 'remix';\nimport {\n  Link,\n  useLoaderData,\n  useCatch,\n  redirect,\n  useParams,\n  Meta,\n  Form,\n} from 'remix';\nimport type { Joke } from '@prisma/client';\nimport { db } from '~/utils/db.server';\nimport { getUserId, requireUserId } from '~/utils/session.server';\n\nexport const meta: MetaFunction = ({\n  data,\n}: {\n  data: LoaderData | undefined;\n}) => {\n  if (!data) {\n    return {\n      title: 'No joke',\n      description: 'No joke found',\n    };\n  }\n  return {\n    title: `\"${data.joke.name}\" joke`,\n    description: `Enjoy the \"${data.joke.name}\" joke and much more`,\n  };\n};\n\ntype LoaderData = { joke: Joke; isOwner: boolean };\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const userId = await getUserId(request);\n  const joke = await db.joke.findUnique({\n    where: { id: params.jokeId },\n  });\n  console.log({ joke });\n  if (!joke) {\n    throw new Response('What a joke! Not found.', {\n      status: 404,\n    });\n  }\n  const data: LoaderData = {\n    joke,\n    isOwner: userId === joke.jokesterId,\n  };\n  return data;\n};\n\nexport const action: ActionFunction = async ({ request, params }) => {\n  const form = await request.formData();\n  if (form.get('_method') === 'delete') {\n    const userId = await requireUserId(request);\n    const joke = await db.joke.findUnique({\n      where: { id: params.jokeId },\n    });\n    if (!joke) {\n      throw new Response(\"Can't delete what does not exist\", { status: 404 });\n    }\n    if (joke.jokesterId !== userId) {\n      throw new Response(\"Pssh, nice try. That's not your joke\", {\n        status: 401,\n      });\n    }\n    await db.joke.delete({ where: { id: params.jokeId } });\n    return redirect('/jokes');\n  }\n};\n\nexport default function JokeRoute() {\n  const data = useLoaderData<LoaderData>();\n  console.log({ data });\n\n  return (\n    <div>\n      <p>Here's your hilarious joke:</p>\n      <p>{data.joke.content}</p>\n      <Link to=\".\">{data.joke.name} Permalink</Link>\n      {data.isOwner ? (\n        <Form method=\"post\">\n          <input type=\"hidden\" name=\"_method\" value=\"delete\" />\n          <button type=\"submit\" className=\"button\">\n            Delete\n          </button>\n        </Form>\n      ) : null}\n    </div>\n  );\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n  const params = useParams();\n  switch (caught.status) {\n    case 404: {\n      return (\n        <div className=\"error-container\">\n          Huh? What the heck is {params.jokeId}?\n        </div>\n      );\n    }\n    case 401: {\n      return (\n        <div className=\"error-container\">\n          Sorry, but {params.jokeId} is not your joke.\n        </div>\n      );\n    }\n    default: {\n      throw new Error(`Unhandled error: ${caught.status}`);\n    }\n  }\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n\n  const { jokeId } = useParams();\n  return (\n    <div className=\"error-container\">{`There was an error loading joke by the id ${jokeId}. Sorry.`}</div>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAAA;;;ACAA;AAWA,gBAAmB;AACnB,qBAAyC;AAElC,IAAM,OAAqB,CAAC;AAAA,EACjC;AAAA,MAGI;AACJ,MAAI,CAAC,MAAM;AACT,WAAO;AAAA,MACL,OAAO;AAAA,MACP,aAAa;AAAA;AAAA;AAGjB,SAAO;AAAA,IACL,OAAO,IAAI,KAAK,KAAK;AAAA,IACrB,aAAa,cAAc,KAAK,KAAK;AAAA;AAAA;AA4C1B,qBAAqB;AAClC,QAAM,OAAO;AACb,UAAQ,IAAI,EAAE;AAEd,SACE,oCAAC,OAAD,MACE,oCAAC,KAAD,MAAG,gCACH,oCAAC,KAAD,MAAI,KAAK,KAAK,UACd,oCAAC,MAAD;AAAA,IAAM,IAAG;AAAA,KAAK,KAAK,KAAK,MAAK,eAC5B,KAAK,UACJ,oCAAC,MAAD;AAAA,IAAM,QAAO;AAAA,KACX,oCAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAS,MAAK;AAAA,IAAU,OAAM;AAAA,MAC1C,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,IAAS,WAAU;AAAA,KAAS,aAIzC;AAAA;AAKH,yBAAyB;AAC9B,QAAM,SAAS;AACf,QAAM,SAAS;AACf,UAAQ,OAAO;AAAA,SACR,KAAK;AACR,aACE,oCAAC,OAAD;AAAA,QAAK,WAAU;AAAA,SAAkB,0BACR,OAAO,QAAO;AAAA;AAAA,SAItC,KAAK;AACR,aACE,oCAAC,OAAD;AAAA,QAAK,WAAU;AAAA,SAAkB,eACnB,OAAO,QAAO;AAAA;AAAA,aAIvB;AACP,YAAM,IAAI,MAAM,oBAAoB,OAAO;AAAA;AAAA;AAAA;AAK1C,uBAAuB,EAAE,SAA2B;AACzD,UAAQ,MAAM;AAEd,QAAM,EAAE,WAAW;AACnB,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAAmB,6CAA6C;AAAA;",
  "names": []
}
