{
  "version": 3,
  "sources": ["browser-route-module:/Volumes/Development/sites/remix-jokes/app/routes/jokes/$jokeId.tsx?browser", "../../../../app/routes/jokes/$jokeId.tsx"],
  "sourcesContent": ["export { ErrorBoundary, default } from \"/Volumes/Development/sites/remix-jokes/app/routes/jokes/$jokeId.tsx\";", "import type { LoaderFunction } from 'remix';\nimport { Link, useLoaderData, useParams } from 'remix';\nimport type { Joke } from '@prisma/client';\nimport { db } from '~/utils/db.server';\n\ntype LoaderData = { joke: Joke };\n\nexport let loader: LoaderFunction = async ({ params }) => {\n  let joke = await db.joke.findUnique({\n    where: { id: params.jokeId },\n  });\n  if (!joke) throw new Error('Joke not found');\n  let data: LoaderData = { joke };\n  return data;\n};\n\nexport default function JokeRoute() {\n  let data = useLoaderData<LoaderData>();\n  throw new Error('Joke not found');\n  return (\n    <div>\n      <p>Here's your hilarious joke:</p>\n      <p>{data.joke.content}</p>\n      <Link to=\".\">{data.joke.name} Permalink</Link>\n    </div>\n  );\n}\n\nexport function ErrorBoundary() {\n  const { jokeId } = useParams();\n  return (\n    <div className=\"error-container\">\n      {`There was an error loading joke by the id ${jokeId}. Sorry.`}\n    </div>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;AAAA;;;ACAA;AAGA,gBAAmB;AAaJ,qBAAqB;AAClC,MAAI,OAAO;AACX,QAAM,IAAI,MAAM;AAChB,SACE,oCAAC,OAAD,MACE,oCAAC,KAAD,MAAG,gCACH,oCAAC,KAAD,MAAI,KAAK,KAAK,UACd,oCAAC,MAAD;AAAA,IAAM,IAAG;AAAA,KAAK,KAAK,KAAK,MAAK;AAAA;AAK5B,yBAAyB;AAC9B,QAAM,EAAE,WAAW;AACnB,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,6CAA6C;AAAA;",
  "names": []
}
