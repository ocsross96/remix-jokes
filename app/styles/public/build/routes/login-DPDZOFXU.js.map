{
  "version": 3,
  "sources": ["empty-module:~/utils/session.server", "browser-route-module:/Volumes/Development/sites/remix-jokes/app/routes/login.tsx?browser", "../../../app/routes/login.tsx"],
  "sourcesContent": ["module.exports = {};", "export { default, links } from \"/Volumes/Development/sites/remix-jokes/app/routes/login.tsx\";", "import type {LinksFunction, ActionFunction} from 'remix';\nimport {Link, useSearchParams, useActionData} from 'remix';\nimport {db} from '~/utils/db.server';\nimport {login, createUserSession} from '~/utils/session.server';\nimport stylesUrl from '../styles/login.css';\n\nexport let links: LinksFunction = () => {\n  return [{rel: 'stylesheet', href: stylesUrl}];\n};\n\nfunction validateUsername(username: unknown) {\n  if (typeof username !== 'string' || username.length < 3) {\n    return `Usernames must be at least 3 characters long`;\n  }\n}\n\nfunction validatePassword(password: string) {\n  if (typeof password !== 'string' || password.length < 6) {\n    return `Passwords must be at least six characters long`;\n  }\n}\n\ntype ActionData = {\n  formError?: string;\n  fieldErrors?: {\n    username: string | undefined;\n    password: string | undefined;\n  };\n  fields?: {\n    loginType: string;\n    username: string;\n    password: string;\n  };\n};\n\nexport let action: ActionFunction = async ({\n  request,\n}): Promise<Response | ActionData> => {\n  let form = await request.formData();\n  let loginType = form.get('loginType');\n  let username = form.get('username');\n  let password = form.get('password');\n  let redirectTo = form.get('redirectTo');\n\n  // we do this type check to be extra sure and to make TypeScript happy\n  if (\n    typeof loginType !== 'string' ||\n    typeof username !== 'string' ||\n    typeof password !== 'string' ||\n    typeof redirectTo !== 'string'\n  ) {\n    return {formError: `Form not submitted correctly.`};\n  }\n\n  let fieldErrors = {\n    username: validateUsername(username),\n    password: validatePassword(password),\n  };\n\n  let fields = {username, password, loginType};\n\n  if (Object.values(fieldErrors).some(Boolean)) {\n    return {fieldErrors, fields};\n  }\n\n  switch (loginType) {\n    case 'login': {\n      // login to get the user\n      let user = await login({username, password});\n      console.log({user});\n\n      // if there's no user, return the fields and a formError\n      if (!user) {\n        return {\n          fields,\n          formError: `Username/Password combination is incorrect`,\n        };\n      }\n\n      // if there is a user, create their session and redirect to /jokes\n      return createUserSession;\n    }\n    case 'register': {\n      let userExists = await db.user.findFirst({\n        where: {username},\n      });\n      if (userExists) {\n        return {\n          fields,\n          formError: `User with username ${username} already exists`,\n        };\n      }\n      // create the user\n      // create their session and redirect to /jokes\n      return {fields, formError: 'Not implemented'};\n    }\n    default: {\n      return {fields, formError: 'Login type invalid'};\n    }\n  }\n\n  // return redirect\n};\n\nexport default function Login() {\n  let actionData = useActionData<ActionData | undefined>();\n  let [searchParams] = useSearchParams();\n  return (\n    <div className=\"container\">\n      <div className=\"content\" data-light=\"\">\n        <h1>Login</h1>\n        <form\n          method=\"post\"\n          aria-describedby={\n            actionData?.formError ? 'form-error-message' : undefined\n          }\n        >\n          <input\n            type=\"hidden\"\n            name=\"redirectTo\"\n            value={searchParams.get('redirectTo') ?? undefined}\n          />\n          <fieldset>\n            <legend className=\"sr-only\">Login or Register?</legend>\n            <label>\n              <input\n                type=\"radio\"\n                name=\"loginType\"\n                value=\"login\"\n                defaultChecked={\n                  !actionData?.fields?.loginType ||\n                  actionData?.fields?.loginType === 'login'\n                }\n              />{' '}\n              Login\n            </label>\n            <label>\n              <input\n                type=\"radio\"\n                name=\"loginType\"\n                value=\"register\"\n                defaultChecked={actionData?.fields?.loginType === 'register'}\n              />{' '}\n              Register\n            </label>\n          </fieldset>\n          <div>\n            <label htmlFor=\"username-input\">Username</label>\n            <input\n              type=\"text\"\n              id=\"username-input\"\n              name=\"username\"\n              defaultValue={actionData?.fields?.username}\n              aria-invalid={Boolean(actionData?.fieldErrors?.username)}\n              aria-describedby={\n                actionData?.fieldErrors?.username ? 'username-error' : undefined\n              }\n            />\n            {actionData?.fieldErrors?.username ? (\n              <p\n                className=\"form-validation-error\"\n                role=\"alert\"\n                id=\"username-error\"\n              >\n                {actionData?.fieldErrors.username}\n              </p>\n            ) : null}\n          </div>\n          <div>\n            <label htmlFor=\"password-input\">Password</label>\n            <input\n              id=\"password-input\"\n              name=\"password\"\n              defaultValue={actionData?.fields?.password}\n              type=\"password\"\n              aria-invalid={\n                Boolean(actionData?.fieldErrors?.password) || undefined\n              }\n              aria-describedby={\n                actionData?.fieldErrors?.password ? 'password-error' : undefined\n              }\n            />\n            {actionData?.fieldErrors?.password ? (\n              <p\n                className=\"form-validation-error\"\n                role=\"alert\"\n                id=\"password-error\"\n              >\n                {actionData?.fieldErrors.password}\n              </p>\n            ) : undefined}\n          </div>\n          <div id=\"form-error-message\">\n            {actionData?.formError ? (\n              <p className=\"form-validation-error\" role=\"alert\">\n                {actionData?.formError}\n              </p>\n            ) : null}\n          </div>\n          <button type=\"submit\" className=\"button\">\n            Submit\n          </button>\n        </form>\n      </div>\n      <div className=\"links\">\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/jokes\">Jokes</Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,WAAO,UAAU;AAAA;AAAA;;;ACAjB;;;ACAA;AAEA,gBAAiB;AACjB,qBAAuC;;;;;;AAGhC,IAAI,QAAuB,MAAM;AACtC,SAAO,CAAC,EAAC,KAAK,cAAc,MAAM;AAAA;AAiGrB,iBAAiB;AAxGhC;AAyGE,MAAI,aAAa;AACjB,MAAI,CAAC,gBAAgB;AACrB,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,IAAU,cAAW;AAAA,KAClC,oCAAC,MAAD,MAAI,UACJ,oCAAC,QAAD;AAAA,IACE,QAAO;AAAA,IACP,oBACE,0CAAY,aAAY,uBAAuB;AAAA,KAGjD,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,OAAO,mBAAa,IAAI,kBAAjB,YAAkC;AAAA,MAE3C,oCAAC,YAAD,MACE,oCAAC,UAAD;AAAA,IAAQ,WAAU;AAAA,KAAU,uBAC5B,oCAAC,SAAD,MACE,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,OAAM;AAAA,IACN,gBACE,CAAC,gDAAY,WAAZ,mBAAoB,cACrB,gDAAY,WAAZ,mBAAoB,eAAc;AAAA,MAEnC,KAAI,UAGT,oCAAC,SAAD,MACE,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,OAAM;AAAA,IACN,gBAAgB,gDAAY,WAAZ,mBAAoB,eAAc;AAAA,MACjD,KAAI,cAIX,oCAAC,OAAD,MACE,oCAAC,SAAD;AAAA,IAAO,SAAQ;AAAA,KAAiB,aAChC,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,IAAG;AAAA,IACH,MAAK;AAAA,IACL,cAAc,+CAAY,WAAZ,mBAAoB;AAAA,IAClC,gBAAc,QAAQ,+CAAY,gBAAZ,mBAAyB;AAAA,IAC/C,oBACE,gDAAY,gBAAZ,mBAAyB,YAAW,mBAAmB;AAAA,MAG1D,gDAAY,gBAAZ,mBAAyB,YACxB,oCAAC,KAAD;AAAA,IACE,WAAU;AAAA,IACV,MAAK;AAAA,IACL,IAAG;AAAA,KAEF,yCAAY,YAAY,YAEzB,OAEN,oCAAC,OAAD,MACE,oCAAC,SAAD;AAAA,IAAO,SAAQ;AAAA,KAAiB,aAChC,oCAAC,SAAD;AAAA,IACE,IAAG;AAAA,IACH,MAAK;AAAA,IACL,cAAc,+CAAY,WAAZ,mBAAoB;AAAA,IAClC,MAAK;AAAA,IACL,gBACE,QAAQ,+CAAY,gBAAZ,mBAAyB,aAAa;AAAA,IAEhD,oBACE,gDAAY,gBAAZ,mBAAyB,YAAW,mBAAmB;AAAA,MAG1D,gDAAY,gBAAZ,mBAAyB,YACxB,oCAAC,KAAD;AAAA,IACE,WAAU;AAAA,IACV,MAAK;AAAA,IACL,IAAG;AAAA,KAEF,yCAAY,YAAY,YAEzB,SAEN,oCAAC,OAAD;AAAA,IAAK,IAAG;AAAA,KACL,0CAAY,aACX,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,IAAwB,MAAK;AAAA,KACvC,yCAAY,aAEb,OAEN,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,IAAS,WAAU;AAAA,KAAS,aAK7C,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD,MACE,oCAAC,MAAD,MACE,oCAAC,MAAD;AAAA,IAAM,IAAG;AAAA,KAAI,UAEf,oCAAC,MAAD,MACE,oCAAC,MAAD;AAAA,IAAM,IAAG;AAAA,KAAS;AAAA;",
  "names": []
}
