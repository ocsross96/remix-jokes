{
  "version": 3,
  "sources": ["browser-route-module:/Volumes/Development/sites/remix-jokes/app/routes/jokes.tsx?browser", "../../../app/routes/jokes.tsx"],
  "sourcesContent": ["export { default, links } from \"/Volumes/Development/sites/remix-jokes/app/routes/jokes.tsx\";", "import { User } from '@prisma/client';\nimport { Link, LinksFunction, LoaderFunction, useLoaderData } from 'remix';\nimport { Outlet } from 'remix';\nimport { db } from '~/utils/db.server';\nimport { getUser } from '~/utils/session.server';\n\nimport stylesUrl from '../styles/jokes.css';\n\nexport let links: LinksFunction = () => {\n  return [\n    {\n      rel: 'stylesheet',\n      href: stylesUrl,\n    },\n  ];\n};\n\ntype LoaderData = {\n  user: User | null;\n  jokeListItems: Array<{ id: string; name: string }>;\n};\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  let jokeListItems = await db.joke.findMany({\n    take: 5,\n    select: { id: true, name: true },\n    orderBy: { createdAt: 'desc' },\n  });\n  let user = await getUser(request);\n  let data: LoaderData = {\n    jokeListItems,\n    user,\n  };\n  return data;\n};\n\nexport default function JokesRoute() {\n  let data = useLoaderData<LoaderData>();\n\n  return (\n    <div className=\"jokes-layout\">\n      <header className=\"jokes-header\">\n        <div className=\"container\">\n          <h1 className=\"home-link\">\n            <Link to=\"/\" title=\"Remix Jokes\" aria-label=\"Remix Jokes\">\n              <span className=\"logo\">\uD83E\uDD2A</span>\n              <span className=\"logo-medium\">J\uD83E\uDD2AKES</span>\n            </Link>\n          </h1>\n          {data.user ? (\n            <div className=\"user-info\">\n              <span>{`Hi ${data.user.username}`}</span>\n              <form action=\"/logout\" method=\"post\">\n                <button type=\"submit\" className=\"button\">\n                  Logout\n                </button>\n              </form>\n            </div>\n          ) : (\n            <Link to=\"/login\">Login</Link>\n          )}\n        </div>\n      </header>\n      <main className=\"jokes-main\">\n        <div className=\"container\">\n          <div className=\"jokes-list\">\n            <Link to=\".\">Get a random joke</Link>\n            <p>Here are a few more jokes to check out:</p>\n            <ul>\n              {data.jokeListItems.map(joke => (\n                <li key={joke.id}>\n                  <Link to={joke.id}>{joke.name}</Link>\n                </li>\n              ))}\n            </ul>\n            <Link to=\"new\" className=\"button\">\n              Add your own\n            </Link>\n          </div>\n          <div className=\"jokes-outlet\">\n            <Outlet />\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;;;ACAA;AAGA,gBAAmB;AACnB,qBAAwB;;;;;;AAIjB,IAAI,QAAuB,MAAM;AACtC,SAAO;AAAA,IACL;AAAA,MACE,KAAK;AAAA,MACL,MAAM;AAAA;AAAA;AAAA;AAwBG,sBAAsB;AACnC,MAAI,OAAO;AAEX,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,UAAD;AAAA,IAAQ,WAAU;AAAA,KAChB,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACZ,oCAAC,MAAD;AAAA,IAAM,IAAG;AAAA,IAAI,OAAM;AAAA,IAAc,cAAW;AAAA,KAC1C,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAO,cACvB,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAc,oBAGjC,KAAK,OACJ,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,QAAD,MAAO,MAAM,KAAK,KAAK,aACvB,oCAAC,QAAD;AAAA,IAAM,QAAO;AAAA,IAAU,QAAO;AAAA,KAC5B,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,IAAS,WAAU;AAAA,KAAS,cAM7C,oCAAC,MAAD;AAAA,IAAM,IAAG;AAAA,KAAS,YAIxB,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KACd,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD;AAAA,IAAM,IAAG;AAAA,KAAI,sBACb,oCAAC,KAAD,MAAG,4CACH,oCAAC,MAAD,MACG,KAAK,cAAc,IAAI,UACtB,oCAAC,MAAD;AAAA,IAAI,KAAK,KAAK;AAAA,KACZ,oCAAC,MAAD;AAAA,IAAM,IAAI,KAAK;AAAA,KAAK,KAAK,UAI/B,oCAAC,MAAD;AAAA,IAAM,IAAG;AAAA,IAAM,WAAU;AAAA,KAAS,kBAIpC,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,gCAAD;AAAA;",
  "names": []
}
